<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAD/AAAA/wAAAP8AAAD/AAAA8gAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAA
        ADIAAABUAAAAVAAAADIAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAADyAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAB6AAAARwAAAEcAAAA6AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAA
        AHsAAADoAAAA/wAAAPMAAADzAAAA/wAAAOgAAAB7AAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ADoAAABHAAAARwAAAHoAAAD/AAAA/wAAAEcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACIAAADUAAAA6gAAAHMAAAAdAAAAAAAAAAAAAAAdAAAAcwAAAOoAAADUAAAAIwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAARwAAAP8AAAD/AAAARwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAhAAAA5QAAAL8AAAAVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFQAAAL8AAADlAAAAIQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABHAAAA/wAAAPIAAAA6AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAACgAAANMAAADAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAA
        AMAAAADTAAAACgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADoAAADyAAAADAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAACRAAAA5QAAABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAFAAAAOUAAACRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAALgAAAPwAAABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAATwAAAPwAAAAuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACyAAAAvQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvAAAALIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKgAAAP0AAAA+AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9AAAA/QAAACoAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACDAAAAyQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADJAAAAgwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAVAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ABYAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYQAAAHoAAAB6AAAAegAAAHoAAAB6AAAAegAA
        AHoAAAB6AAAAegAAAHoAAAB8AAAAegAAAHoAAAB6AAAAegAAAHoAAAB6AAAAegAAAHoAAAB8AAAAegAA
        AHoAAAB6AAAAegAAAHoAAAB6AAAAegAAAHoAAAB6AAAAegAAAGEAAACxAAAAzAAAAMwAAADUAAAA/wAA
        ANIAAADMAAAAzAAAAMwAAADcAAAA/wAAAP8AAAD/AAAA3gAAAMwAAADMAAAAzAAAAMwAAADeAAAA/wAA
        AP8AAAD/AAAA3AAAAMwAAADMAAAAzAAAANIAAAD/AAAA0wAAAMwAAADMAAAAsQAAAAAAAAAAAAAAAAAA
        ABQAAAD9AAAARQAAAAAAAAAAAAAAAAAAAF4AAAD/AAAA/wAAAP8AAABoAAAAAAAAAAAAAAAAAAAAAAAA
        AGgAAAD/AAAA/wAAAP8AAABeAAAAAAAAAAAAAAAAAAAAQwAAAP0AAAAUAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAKcAAADxAAAAqQAAAFIAAAAAAAAAGwAAAOwAAAD/AAAA7wAAACEAAAAAAAAAAAAA
        AAAAAAAAAAAAIQAAAO8AAAD/AAAA7AAAABsAAAAAAAAAUgAAAKQAAADtAAAAxQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAjgAAANoAAADWAAAArQAAAAAAAAAAAAAAGAAAAFQAAAAbAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAGwAAAFQAAAAYAAAAAAAAAAAAAACtAAAA2AAAALYAAADXAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADLAAAAggAAAJgAAACtAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK0AAACZAAAATQAA
        APkAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPMAAABVAAAAmAAAAK0AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAswAA
        AJUAAAA0AAAA/wAAABMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPAAAA/wAAADgAAACJAAAAxwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAADgAAABYAAAAfAAAANAAA
        AG4AAAD2AAAAXAAAACUAAAD/AAAAIQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8AAAD/AAAAJwAA
        ADMAAAD6AAAApwAAAC0AAAAAAAAAAAAAAAAAAAAAAAAABwAAAGIAAACyAAAA4QAAAPwAAAD/AAAA/wAA
        AP8AAAD/AAAA6QAAAH4AAAABAAAAIAAAAP8AAAAnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJgAA
        AP8AAAAgAAAAAAAAAD4AAADFAAAA/QAAAJUAAAAEAAAAAAAAADMAAADdAAAA8AAAAJ8AAABoAAAASAAA
        ADgAAAAwAAAAJwAAABUAAAAAAAAAAAAAAAAAAAAlAAAA/wAAACEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAeAAAA/wAAACoAAAAAAAAAAAAAAAAAAABJAAAA7QAAAJIAAAAjAAAA7gAAAKsAAAARAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD0AAAD+AAAADAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAMAAAD2AAAAUwAAAAAAAAAAAAAAAAAAAAAAAABNAAAA/AAAAMwAAADDAAAAAwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZwAAAOUAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALsAAACbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADYAAAA/wAA
        AD4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACoAAAAqwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYQAAAPEAAAARAAAAAAAAAAAAAAAAAAAAAAAA
        AJQAAADpAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwAA
        APQAAABbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAAAA4gAAAI8AAAAAAAAAAAAA
        AAAAAAAAAAAAMAAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAACAAAAA5wAAAAgAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAABQAAAA/AAA
        AEsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAALwAAAPcAAABkAAAAAAAAAAAAAAAAAAAAAAAAAAwAAADyAAAAOgAAAAAAAAAAAAAAAAAA
        AAAAAACJAAAA9QAAAE0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAACoAAADkAAAArgAAAAEAAAAAAAAAAAAAAAAAAAA6AAAA8gAAAP8AAABHAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAACJAAAA/AAAAJEAAAASAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAUAAABtAAAA8gAAALMAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAEcAAAD/AAAA/wAA
        AEcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABPAAAA4AAAAPMAAACeAAAAUwAAAB4AAAACAAAAAAAA
        AAAAAAABAAAAGQAAAEcAAACLAAAA5QAAAPIAAAB0AAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARwAA
        AP8AAAD/AAAAegAAAEcAAABHAAAAOgAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAXQAAALgAAAD2AAAA/wAA
        APsAAADuAAAA7QAAAPoAAAD/AAAA+wAAAMgAAAB1AAAAEwAAAAAAAAAAAAAAAAAAAAAAAAA6AAAARwAA
        AEcAAAB6AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADyAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAUAAAAsAAAASgAAAFgAAABYAAAATAAAADEAAAAKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAA
        APIAAAD/AAAA/wAAAP8AAAD/A/gfwAfgB+A/wYP8P4fh/D8P8Px/H/j+/j/8f/5//n/8f/4//P//P/z/
        /z8AAAAAAAAAAOODwcfwg8EP8MfjD/D//wfw//8H4P/AB+A8AAfiCAHH44D/x+PB/8/z4//P8eP/j/Hn
        /494//8ePH/+HD4f+Dw/AYB8B4AB4APwD8A=
</value>
  </data>
</root>